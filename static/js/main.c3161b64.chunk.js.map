{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","clazz","type","key","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","important","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","before","slice","after","addItem","text","newItem","toggleProperty","search","items","length","toLowerCase","indexOf","arr","propName","oldItem","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3161b64.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;\r\n","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: '',\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;\r\n","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nclass ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All',},\r\n        {name: 'active', label: 'Active',},\r\n        {name: 'done', label: 'Done',},\r\n    ];\r\n\r\n    render() {\r\n\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return <button type=\"button\"\r\n                           className={`btn ${clazz}`}\r\n                           key={name}\r\n                           onClick={() => onFilterChange(name)}\r\n            >{label}</button>;\r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemStatusFilter;\r\n","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;\r\n","import React from \"react\";\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = props => {\r\n\r\n    const {label, onDeleted, onToggleImportant, onToggleDone, done, important} = props;\r\n\r\n    let classNames = \"todo-list-item\";\r\n\r\n    if (done) {\r\n        classNames += \" done\";\r\n    }\r\n\r\n    if (important) {\r\n        classNames += \" important\";\r\n    }\r\n\r\n    return (\r\n        <span className={classNames}>\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={onToggleDone}\r\n            >\r\n                {label}\r\n            </span>\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}\r\n            >\r\n                <i className=\"fa fa-exclamation\"/>\r\n            </button>\r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={onDeleted}\r\n            >\r\n                <i className=\"fa fa-trash-o\"/>\r\n            </button>\r\n        </span>);\r\n}\r\n\r\nexport default TodoListItem;\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const elements = todos.map(item => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    {...itemProps}\r\n                    onDeleted={() => {\r\n                        onDeleted(id);\r\n                    }}\r\n                    onToggleImportant={() => {\r\n                        onToggleImportant(id);\r\n                    }}\r\n                    onToggleDone={() => {\r\n                        onToggleDone(id);\r\n                    }}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;\r\n","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nclass ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: '',\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value,\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control input-form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"What needs to be done?\"\r\n                    value={this.state.label}\r\n                />\r\n                <button\r\n                    className=\"btn btn-outline-secondary button-add-item\"\r\n                >Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemAddForm;\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lunch'),\r\n        ],\r\n        term: '',\r\n        filter: 'done',\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++,\r\n        }\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex(item => item.id === id);\r\n            const before = todoData.slice(0, idx);\r\n            const after = todoData.slice(idx + 1);\r\n            const newArray = [...before, ...after];\r\n            return {\r\n                todoData: newArray,\r\n            }\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArray = [...todoData, newItem];\r\n            return {\r\n                todoData: newArray,\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex(item => item.id === id);\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important'),\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done'),\r\n            };\r\n        });\r\n    };\r\n\r\n    search = (items, term) => {\r\n        if (items.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter(item => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter(item => !item.done);\r\n            case 'done':\r\n                return items.filter(item => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter(item => item.done).length;\r\n        const todoCount = todoData.filter(item => !item.done).length;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange}\r\n                    />\r\n                    <ItemStatusFilter filter={filter}\r\n                                      onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}\r\n                />\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}